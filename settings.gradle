def commandDir = System.getProperty("user.dir")

if (rootProject.dir.toString() != commandDir.toString()) {
	projectIncludes = commandDir.toString().replaceAll(".+[\\\\/]", "")
}

String[] projectExcludesList =
	projectExcludes.replaceAll(" ", "").replaceAll(",+", ",").split(",")

String[] projectIncludesList =
	projectIncludes.replaceAll(" ", "").replaceAll(",+", ",").split(",")

FileTree projectScripts = fileTree(rootDir) {
	if (projectIncludes != "" && projectIncludes != "*") {
		String[] projectScriptsIncludes = projectIncludesList.collect {
			"**/" + it + "/build.gradle"
		}

		projectScriptsIncludes.each { 
			include it
		}
	}
	else {
		include "**/build.gradle"
	}

	if (projectExcludes != "") {
		String[] projectScriptsExcludes = projectExcludesList.collect {
			"**/" + it + "/build.gradle"
		}

		projectScriptsExcludes.each {
			exclude it
		}
	}

	exclude "build.gradle"	//exclude root
}

def addProject

addProject = {
	include it

	String projectPropertiesFileStr

	projectPropertiesFileStr = it.replaceAll(":", "/")
	projectPropertiesFileStr = projectPropertiesFileStr + "/gradle.properties"
	projectPropertiesFileStr = projectPropertiesFileStr.replaceFirst("^/", "")
	projectPropertiesFileStr = rootDir.toString() + "/" + projectPropertiesFileStr

	File projectPropertiesFile = new File(projectPropertiesFileStr)

	if (projectPropertiesFile.exists()) {
		Properties projectProperties = new Properties()

		projectProperties.load(new FileInputStream(projectPropertiesFile))

		if (projectProperties.dependencyProjects) {
			projectProperties.dependencyProjects.split(",").each {
				addProject(it)
			}
		}
	}
}

projectScripts.each {
	URI projectScriptUri = it.toURI()
	URI rootDirUri = rootDir.toURI()
	URI projectScriptRelativeUri = rootDirUri.relativize(projectScriptUri)
	String projectScriptRelativeStr = projectScriptRelativeUri.toString()
	String projectDirRelativeStr =
		projectScriptRelativeStr.replaceFirst("/build.gradle", "")
	String projectPath = projectDirRelativeStr.replaceAll("[\\/]", ":")

	addProject(projectPath)
}